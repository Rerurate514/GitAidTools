'alt + D でプレビュー

@startuml
title フロントエンドとバックエンドとoctocrab(Rustライブラリ)によるGithubAPIでの通信(リポジトリ操作編)

participant 各描画コンポーネント.tsx #Aqua
participant エントリポイント #Aqua

participant バックエンド.rs

database Githubサーバ
database localDatabase

autonumber

group ライブラリ操作 : octocrab

    エントリポイント -> バックエンド.rs ++ : OAuth認証リクエスト
    バックエンド.rs -> Githubサーバ ++ : OAuth認証リクエスト
    Githubサーバ -> バックエンド.rs -- : アクセストークンなどの\n認証情報
    note left : octocrabは\nRustでOctokit.jsを\nラップしたもの。

    バックエンド.rs -> Githubサーバ ++ : リポジトリ情報リクエスト
    Githubサーバ -> バックエンド.rs -- : ユーザの\nリポジトリ情報が\n入ったJsonファイル

end 

バックエンド.rs --> バックエンド.rs -- : Jsonをバリデートする。

group コントローラー操作
    バックエンド.rs --> バックエンド.rs : コントローラーに\n情報を渡す。
    note left : ControllerClass
    バックエンド.rs -> 各描画コンポーネント.tsx : コンポーネントごとに描画する情報
    バックエンド.rs -> localDatabase -- : リポジトリを\nJsonをもとに登録
end

==アーキテクチャ構造==

note over 各描画コンポーネント.tsx, エントリポイント : VIEW
note over バックエンド.rs, バックエンド.rs : CONTROLLER
note over localDatabase, localDatabase : MODEL

@enduml